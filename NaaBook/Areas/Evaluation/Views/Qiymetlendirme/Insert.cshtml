@model NaaBook.Viewmodels.VwEvaluation


@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="az">
<head>
    <meta name="viewport" content="width=device-width" />

    <title>Index</title>
    <!--Theme custom css -->
    <link rel="stylesheet" href="~/Public/assets/css/style.css">
    <!--<link rel="stylesheet" href="~/Public/assets/css/colors/maron.css">-->
    <!--Theme Responsive css-->
    <link rel="stylesheet" href="~/Public/assets/css/responsive.css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css" integrity="sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay" crossorigin="anonymous">
</head>

<body>
    <div class="sidebar2">

        <a href="@Url.Action("index","cedvelim")"> <i class="far fa-newspaper"></i> </a>
        <a href="@Url.Action("index","anasehife")"><i class="fas fa-child"></i> </a>
        <a href="@Url.Action("index","anasehife")"> <i class="fas fa-home"></i></a>
    </div>
        <section id="studenteva">
        @using (Html.BeginForm("insert", "qiymetlendirme", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal formstyle">
                <h4 class="text-orange">Qiymətləndirmə cədvəli</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Evaluationtable.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                    <div class="col-md-10">
                        @Html.DropDownList("StudentId", null,htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Evaluationtable.StudentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Evaluationtable.MarkOrAttendanceFirst, htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Evaluationtable.MarkOrAttendanceFirst, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Evaluationtable.MarkOrAttendanceFirst, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Evaluationtable.MarkOrAttendanceSecond, htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Evaluationtable.MarkOrAttendanceSecond, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Evaluationtable.MarkOrAttendanceSecond, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Evaluationtable.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Evaluationtable.SubjectId, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Qiymətləndir" class="btn btn-default text-orange" />
                    </div>
                </div>
            </div>
        }

        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
    </section>
        <section id="studentfreework">
            @using (Html.BeginForm("insert", "qiymetlendirme", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Freework</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Freework.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                        <div class="col-md-10">
                            @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Freework.StudentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Freework.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                        <div class="col-md-10">
                            @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Freework.SubjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Freework.Count, htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Freework.Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Freework.Count, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Əlavə et" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

          
        </section>
        <section id="studentlab">
            @using (Html.BeginForm("insert", "qiymetlendirme", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Laboratory</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Laboratory.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                        <div class="col-md-10">
                            @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Laboratory.StudentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Laboratory.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                        <div class="col-md-10">
                            @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Laboratory.SubjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Laboratory.Count, htmlAttributes: new { @class = "control-label col-md-2 text-orange" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Laboratory.Count, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Laboratory.Count, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Əlavə et" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

         
        </section>
</body>
</html>
